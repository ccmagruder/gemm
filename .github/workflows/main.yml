name: CI

on:
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
      - synchronize

jobs:
  devcontainer:
    runs-on: self-hosted
    steps:
      - name: cleanup build folder
        run: |
          ls -la ./
          rm -rf ./* || true
          rm -rf ./.??* || true
          ls -la ./

      - name: checkout repo
        uses: actions/checkout@v4

      - name: docker build
        run: docker compose build devcontainer

      - name: nvidia-smi
        run: docker compose run --rm devcontainer nvidia-smi

  jupyter:
    runs-on: self-hosted
    steps:
      - name: cleanup build folder
        run: |
          ls -la ./
          rm -rf ./* || true
          rm -rf ./.??* || true
          ls -la ./

      - name: checkout repo
        uses: actions/checkout@v4

      - name: docker build jupyter
        run: docker compose build jupyter

  build:
    needs: devcontainer
    runs-on: self-hosted
    steps:
      - name: cleanup build folder
        run: |
          ls -la ./
          rm -rf ./* || true
          rm -rf ./.??* || true
          ls -la ./

      - name: checkout repo
        uses: actions/checkout@v4

      - name: cmake configure
        run: docker compose run --rm devcontainer cmake -DCMAKE_BUILD_TYPE=Release -S gemm -B build

      - name: cmake build
        run: docker compose run --rm devcontainer cmake --build build

      - name: clang-tidy
        run: docker compose run --rm devcontainer bash -c "source /.venv/bin/activate && ./clangd-tidy.sh"
      
      - name: clang-format
        run: |
          docker run --rm -v .:/root ccmagruder/devcontainer-gemm:latest bash -c "cd /root && clang-format --dry-run --Werror gemm/**/*.h gemm/**/*.cpp gemm/**/*.cuh gemm/**/*.cu"

      - name: google test
        run: docker compose run --rm devcontainer ctest --test-dir build --output-on-failure

      - name: upload benchmark binaries
        uses: actions/upload-artifact@v4
        with:
          name: binaries
          path: build/tests/b*


  benchmark:
    needs: build
    runs-on: self-hosted
    steps:
      - name: cleanup build folder
        run: |
          ls -la ./
          rm -rf ./* || true
          rm -rf ./.??* || true
          ls -la ./

      - name: checkout repo
        uses: actions/checkout@v4

      - name: download benchmark binaries
        uses: actions/download-artifact@v4
        with:
          name: binaries

      - name: google benchmark
        run: |
          chmod +x bGemm bGemmSweep
          docker compose run --rm devcontainer ./benchmark.sh .
      - name: upload benchmark json results
        uses: actions/upload-artifact@v4
        with:
          name: results-json
          path: |
            bGemm.json
            bGemmSweep.json

  plots:
    needs: [benchmark, jupyter]
    runs-on: self-hosted
    steps:
      - name: cleanup build folder
        run: |
          ls -la ./
          rm -rf ./* || true
          rm -rf ./.??* || true
          ls -la ./

      - name: checkout repo
        uses: actions/checkout@v4

      - name: download benchmark results
        uses: actions/download-artifact@v4
        with:
          name: results-json

      - name: generate jupyter plots
        run: docker compose run --rm jupyter papermill plots.ipynb plots.ipynb

      - name: export notebook to html
        run: docker compose run --rm jupyter jupyter nbconvert --to html plots.ipynb

      - name: upload jupyter notebook
        uses: actions/upload-artifact@v4
        with:
          name: plots.html
          path: plots.html
